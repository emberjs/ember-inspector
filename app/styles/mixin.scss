/**
 MIXIN
 =====
 A single mixin inside the object inspector
 It could be the object's own properties
 or a mixin the object extends
*/

$mixin-left-padding: 22px;

.mixin__name {
  border-bottom: 1px solid var(--base03);
  padding: 4px 2px 4px $mixin-left-padding;
  z-index: 1;

  &:active {
    background-color: var(--base02);
  }

  &:before {
    color: var(--base10);
    content: "\25B6";
    font-size: 75%;
    left: 7px;
    margin-right: 5px;
    position: absolute;
    top: 6px;
    transform: rotate(0deg);
    transition: all 0.1s;
  }
}

.mixin_props_no .mixin__name:before {
  opacity: 0;
}

.mixin_state_expanded .mixin__name:before {
  transform: rotate(90deg);
}

.mixin__properties {
  border-bottom: 1px solid var(--base03);
  padding: 3px 0 5px;
}

.mixin__property {
  min-height: 19px;
  padding-bottom: 1px;
  padding-top: 1px;

  button {
    background: none;
    border: none;
    margin: 0;
    padding: 0;
  }

  .pad {
    flex-shrink: 0;
    width: $mixin-left-padding;
  }

  .mixin__calc-btn svg {
    path,
    circle {
      fill: var(--spec07);
    }
  }

  .mixin__send-btn {
    opacity: 0;
    padding-right: 6px;
  }

  .mixin__cp-toggle {
    outline: none;
    width: $mixin-left-padding;

    svg {
      transform: rotate(-90deg) translateY(1px);
      transition: all 0.2s;
    }
  }

  .mixin__cp-toggle--expanded {
    svg {
      transform: rotate(0deg);
    }
  }
}

/* Buttons */

.mixin__property-overridden-by {
  display: none;
}

.mixin__property-name {
  max-width: 50%;
}

.mixin__property-value {
  flex: 1;
  min-height: 14px;
}

.mixin__property-value-txt {
  border: 1px solid var(--base09);
}

.mixin__property .type-function {
  color: var(--base08);
}

.mixin__property .type-object {
  color: var(--base11);
}

.mixin__property .type-ember-object,
.mixin__property .type-object,
.mixin__property .type-array {
  cursor: pointer;
}

.mixin__property .type-null,
.mixin__property .type-boolean {
  color: var(--spec03);
}

.mixin__property .type-descriptor {
  color: var(--spec02);
  cursor: pointer;
}

.mixin__property .type-service {
  color: var(--spec09);
}

.mixin__property:not(.mixin__property-state-overridden):hover {
  background-color: var(--base01);
}

.mixin__property-state-overridden:hover .mixin__property-overridden-by {
  display: inline;
}

.mixin__property:not(.mixin__property-state-overridden):hover .mixin__send-btn {
  opacity: 1;

  &:active {
    opacity: 0.5;
  }
}
