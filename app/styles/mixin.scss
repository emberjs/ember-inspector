/**
 MIXIN
 =====
 A single mixin inside the object inspector
 It could be the object's own properties
 or a mixin the object extends
*/

$mixin-left-padding: 22px;

.mixin__name {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  padding: 4px 2px 4px $mixin-left-padding;
  border-bottom: 1px solid var(--base34);
  background-color: var(--base35);
  cursor: default;
  user-select: none;
  color: var(--base28);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  z-index: 1;
}

.mixin__name:active {
  background-color: var(--base36);
}

.mixin__name--no-props {
  color: var(--base17);
}

.mixin_props_no .mixin__name:before {
  opacity: 0;
}

.mixin__name:before {
  position: absolute;
  top: 5px;
  left: 6px;
  content: "\25B6";
  color: var(--base18);
  margin-right: 5px;
  font-size: 90%;
  transform: rotate(0deg);
  transition: all 0.1s;
}

  .mixin_state_expanded .mixin__name:before {
    transform: rotate(90deg);
  }

.mixin__properties {
  list-style-type: none;
  border-bottom: 1px solid var(--base34);
  margin: 0;
  padding: 3px 0 5px 0;
  font-size: 12px;
  font-family: var(--font-monospace);
}

.mixin__property {
  position: relative;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: flex;
  flex-direction: row;
  align-items: center;
  min-height: 19px;
  padding-top: 1px;
  padding-bottom: 1px;

  .mixin__cp-toggle {
    width: $mixin-left-padding;
    outline: none;

    svg {
      transition: all 0.2s;
      transform:
        rotate(-90deg)
        translateY(1px);
    }
  }
  .mixin__cp-toggle--expanded {
    svg {
      transform: rotate(0deg);
    }
  }
}

/* Errors */

.mixin__error {
  margin-right: 3px;
  padding: 0px 20px;
  color: var(--spec02);
}

.mixin__name--errors {
  background-color: var(--base00);

  &:active{
    background-color: var(--base00);
  }
}

/* Buttons */

.mixin__property {
  button {
    border: none;
    background: none;
    margin: 0;
    padding: 0;
  }

  .pad { width: $mixin-left-padding; }

  .mixin__calc-btn svg {
    path, circle { fill: var(--spec18); }
  }

  .mixin__send-btn {
    opacity: 0;
    padding-right: 6px;
  }
}

.mixin__property-overridden-by {
  display: none;
}

.mixin__property-name {
  color: var(--base26);
}

.mixin__property-value {
  flex: 1;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  min-height: 14px;
}

.mixin__property-value-txt {
  flex: 1;
  border: 1px solid var(--base17);
  outline: none;
  color: var(--base26);
  font-size: 12px;
  background: var(--base01);
}

.mixin__property-value-separator {
  margin-right: 5px;
}

.mixin__property .type-function {
  color: var(--base15);
}

.mixin__property .type-object {
  color: var(--base20);
}

.mixin__property .type-ember-object,
.mixin__property .type-array {
  cursor: pointer;
}

.mixin__property .type-null,
.mixin__property .type-boolean {
  color: var(--spec10);
}

.mixin__property .type-descriptor {
  cursor: pointer;
  color: var(--spec05);
}

.mixin__property .type-service {
  color: var(--spec17);
}


.mixin__property_state_overridden {
  text-decoration: line-through;
}


.mixin__property:not(.mixin__property_state_overridden):hover {
  background-color: var(--base01);
}


.mixin__property_state_overridden:hover .mixin__property-overridden-by {
  position: absolute;
  background-color: var(--spec01);
  right: 0;
  display: inline;
  text-decoration: none;
}

.mixin__property:not(.mixin__property_state_overridden):hover .mixin__send-btn {
  opacity: 1;

  &:active {
    opacity: 0.5;
  }
}
